import { FieldName, FieldProps } from './commonTypes';
import { IFieldLink, HandledByPropsInConfig, LinkMiddleware, RenderCtx, PreRenderCtx, InputOnChange, OnValidateErrorFunction } from './fieldLinkInterfaces';
import { ConfigConverter, MergeChildrenFunction, ValidateFunction } from './shared';
export declare type EvaluateConfigFunction<FieldObjectConfig> = (cfg: FieldObjectConfig) => FieldObjectConfig;
export declare type FinalFieldConfig<ObjectConfig> = ObjectConfig | EvaluateConfigFunction<ObjectConfig>;
export declare type ConfigCreator<ObjectConfig> = (...args: any[]) => FinalFieldConfig<ObjectConfig>;
export declare type ConfigNonStringPreset<ObjectConfig> = FinalFieldConfig<ObjectConfig>;
export declare type ConfigPreset<ObjectConfig> = string | any[] | ConfigNonStringPreset<ObjectConfig>;
export declare type CfgMiddlewares<ObjectConfig> = {
    before?: (FinalFieldConfig<ObjectConfig>)[] | (FinalFieldConfig<ObjectConfig>);
    after?: (FinalFieldConfig<ObjectConfig>)[] | (FinalFieldConfig<ObjectConfig>);
    last?: (FinalFieldConfig<ObjectConfig>)[] | (FinalFieldConfig<ObjectConfig>);
};
export declare type FieldObjectConfig<FieldLink extends IFieldLink<FieldLink>> = {
    converter?: ConfigConverter<FieldLink>;
    name?: FieldName;
    data?: any;
    preset?: ConfigPreset<FieldObjectConfig<FieldLink>>;
    presets?: (ConfigPreset<FieldObjectConfig<FieldLink>>)[];
    evaluate?: EvaluateConfigFunction<FieldObjectConfig<FieldLink>>;
    handledByProps?: HandledByPropsInConfig<FieldLink>;
    ignoredFromOutputs?: boolean;
    cfgMiddlewares?: CfgMiddlewares<FieldObjectConfig<FieldLink>>;
    options?: any;
    onChange?: InputOnChange<FieldLink>;
    onValidateError?: OnValidateErrorFunction<FieldLink>;
    mergeChildren?: MergeChildrenFunction<FieldLink>;
    validate?: ValidateFunction<FieldLink>;
    component?: any;
    shouldRender?: boolean;
    defaultValue?: any;
    childLinks?: (ConfigNonStringPreset<FieldObjectConfig<FieldLink>>)[];
    childElements?: (ConfigNonStringPreset<FieldObjectConfig<FieldLink>>)[];
    props?: FieldProps;
    mwRenderArray?: LinkMiddleware<RenderCtx<FieldLink>>[];
    mwPreRenderArray?: LinkMiddleware<PreRenderCtx<FieldLink>>[];
    mwRender?: LinkMiddleware<RenderCtx<FieldLink>> | LinkMiddleware<RenderCtx<FieldLink>>[];
    mwPreRender?: LinkMiddleware<PreRenderCtx<FieldLink>> | LinkMiddleware<PreRenderCtx<FieldLink>>[];
    extraConverter?: ConfigConverter<FieldLink>;
    extraProps?: FieldProps;
    extraOptions?: any;
    extraChildLinks?: (ConfigNonStringPreset<FieldObjectConfig<FieldLink>>)[];
    extraChildElements?: (ConfigNonStringPreset<FieldObjectConfig<FieldLink>>)[];
};
export declare type FieldConfig<FieldLink extends IFieldLink<FieldLink>> = ConfigNonStringPreset<FieldObjectConfig<FieldLink>>;
export declare type IlPreset<FieldLink extends IFieldLink<FieldLink>> = ConfigPreset<FieldObjectConfig<FieldLink>>;
export declare type IlPresetMap<FieldLink extends IFieldLink<FieldLink>> = {
    [s: string]: FieldConfig<FieldLink>;
};
